microstrain_inertial_driver:
  ros__parameters:
    # You should change this section of config to match your setup
    port : '/dev/ttyACM0'
    baudrate : 115200

    # This will cause the node to convert any NED measurements to ENU
    # This will also cause the node to convert any vehicle frame measurements to the ROS definition of a vehicle frame
    use_enu_frame : True

    # Configure some frame IDs
    frame_id        : 'gq7_link'  # Frame ID of all of the filter messages. Represents the location of the CV7-INS in the tf tree
    map_frame_id    : "map"           # Frame ID of the local tangent plane.
    earth_frame_id  : "earth"         # Frame ID of the global frame
    target_frame_id : "base_link"     # Frame ID that we will publish a transform to.

    # Disable the transform from the mount to frame id transform as it will be handled in the launch file
    publish_mount_to_frame_id_transform : False

    # We will use relative transform mode, meaning that we will publish the following transforms from this node
    #   earth_frame_id -> map_frame_id
    #   map_frame_id -> target_frame_id
    # This helps ROS standard tools consume and display position information produced by the device
    tf_mode: 2

    # We will use auto relative position configuration for this example. This configuration does a couple things:
    #   We will setup a local tangent plane at the first location we receive after the device enters full navigation mode
    #   We will publish this location as the transform from the earth_frame_id to map_frame_id frame
    filter_relative_position_config : True
    filter_relative_position_source : 2

    # This will set the initial heading alignment to use the magnetometer
    filter_auto_heading_alignment_selector : 4  # TODO: Set this to dual antenna


    filter_llh_position_data_rate          : 10  # Rate of ekf/llh_position topic